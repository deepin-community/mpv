Index: mpv-master/filters/f_decoder_wrapper.c
===================================================================
--- mpv-master.orig/filters/f_decoder_wrapper.c
+++ mpv-master/filters/f_decoder_wrapper.c
@@ -344,6 +344,7 @@ int mp_decoder_wrapper_control(struct mp
                                enum dec_ctrl cmd, void *arg)
 {
     struct priv *p = d->f->priv;
+    p->decf->filename = d->filename;
     int res = CONTROL_UNKNOWN;
     if (cmd == VDCTRL_GET_HWDEC) {
         mp_mutex_lock(&p->cache_lock);
Index: mpv-master/filters/f_decoder_wrapper.h
===================================================================
--- mpv-master.orig/filters/f_decoder_wrapper.h
+++ mpv-master/filters/f_decoder_wrapper.h
@@ -35,6 +35,8 @@ struct mp_decoder_wrapper {
 
     // Can be set by user.
     struct mp_recorder_sink *recorder_sink;
+
+    char *filename;
 };
 
 // Create the decoder wrapper for the given stream, plus underlying decoder.
Index: mpv-master/filters/filter.h
===================================================================
--- mpv-master.orig/filters/filter.h
+++ mpv-master/filters/filter.h
@@ -337,6 +337,8 @@ struct mp_filter {
 
     // Private state for the generic filter code.
     struct mp_filter_internal *in;
+
+    char *filename;
 };
 
 // Return a symbolic name, which is set at init time. NULL if no name.
Index: mpv-master/player/video.c
===================================================================
--- mpv-master.orig/player/video.c
+++ mpv-master/player/video.c
@@ -188,6 +188,7 @@ int init_video_decoder(struct MPContext
     if (!track->dec)
         goto err_out;
 
+    track->dec->filename = mpctx->filename;
     if (!mp_decoder_wrapper_reinit(track->dec))
         goto err_out;
 
Index: mpv-master/video/decode/vd_lavc.c
===================================================================
--- mpv-master.orig/video/decode/vd_lavc.c
+++ mpv-master/video/decode/vd_lavc.c
@@ -28,6 +28,8 @@
 #include <libavutil/opt.h>
 #include <libavutil/intreadwrite.h>
 #include <libavutil/pixdesc.h>
+#include <libavutil/parseutils.h>
+#include <libavformat/avformat.h>
 
 #include "mpv_talloc.h"
 #include "common/global.h"
@@ -708,6 +710,13 @@ static void init_avctx(struct mp_filter
     avctx->codec_id = lavc_codec->id;
     avctx->pkt_timebase = ctx->codec_timebase;
 
+    AVRational *timebase = &avctx->framerate;
+    char fps[50];
+    if (NULL != ctx->codec) {
+        sprintf(fps, "%.5f",ctx->codec->fps);
+        int er = av_parse_video_rate(timebase, &fps);
+    }
+
     ctx->pic = av_frame_alloc();
     if (!ctx->pic)
         goto error;
@@ -820,6 +829,23 @@ static void init_avctx(struct mp_filter
         goto error;
     }
 
+    if (vd->filename) {
+        AVFormatContext *avfctx = NULL;
+        avfctx = avformat_alloc_context();
+        if (avformat_open_input(&avfctx, vd->filename, NULL, NULL) == 0) {
+            if (avformat_find_stream_info(avfctx, NULL) >= 0) {
+                AVCodecParameters *codec_par = avfctx->streams[0]->codecpar;
+                const AVCodec *codec = avcodec_find_decoder(codec_par->codec_id);
+                if (codec && codec->type == AVMEDIA_TYPE_VIDEO) {
+                    avctx->profile = codec->profiles;
+                    avctx->level = codec_par->level;
+                }
+            }
+        }
+
+        avformat_close_input(&avfctx);
+    }
+
     /* open it */
     if (avcodec_open2(avctx, lavc_codec, NULL) < 0)
         goto error;
@@ -1410,6 +1436,7 @@ static struct mp_decoder *create(struct
                                  const char *decoder)
 {
     struct mp_filter *vd = mp_filter_create(parent, &vd_lavc_filter);
+    vd->filename = parent->filename;
     if (!vd)
         return NULL;
 
